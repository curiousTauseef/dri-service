<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

<modelVersion>4.0.0</modelVersion>
<groupId>vphshare</groupId>
<artifactId>driservice</artifactId>
<packaging>war</packaging>
<version>0.0.1-SNAPSHOT</version>
<name>DRI Service</name>
<url>http://vph.cyfronet.pl/</url>

<developers>
	<developer>
		<id>kstyrc</id>
		<name>Krzysztof Styrc</name>
	</developer>
</developers>

<scm>
	<connection>scm:svn:https://gforge.cyfronet.pl/svn/driservice</connection>
	<developerConnection>scm:svn:https://gforge.cyfronet.pl/svn/driservice</developerConnection>
	<url>https://gforge.cyfronet.pl/plugins/scmsvn/viewcvs.php/?root=driservice</url>
</scm>

<!-- TODO where to deploy artifacts (repository location) -->
<distributionManagement>
	<repository>
		<id>dri.repository</id>
		<url>scp://SERVER.COM</url>
	</repository>
</distributionManagement>

<properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

	<tomcat.remote.dir>scp://vph.cyfronet.pl/home/dri/apache-tomcat-7.0.23/webapps</tomcat.remote.dir>

	<org.springframework.version>3.1.0.RELEASE</org.springframework.version>
	<jersey-version>1.11</jersey-version>
	<jclouds-version>1.6.0</jclouds-version>
	<embed-tomcat-version>7.0.42</embed-tomcat-version>
</properties>

<repositories>
	<repository>
		<id>maven2-repository.dev.java.net</id>
		<name>Java.net Repository for Maven</name>
		<url>http://download.java.net/maven/2/</url>
		<layout>default</layout>
	</repository>
</repositories>

<dependencies>
    <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>15.0</version>
    </dependency>
    <dependency>
		<groupId>com.google.inject</groupId>
		<artifactId>guice</artifactId>
		<version>3.0</version>
	</dependency>
	<dependency>
		<groupId>com.google.inject.extensions</groupId>
		<artifactId>guice-servlet</artifactId>
		<version>3.0</version>
	</dependency>
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>3.0.1</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>com.sun.jersey</groupId>
		<artifactId>jersey-server</artifactId>
		<version>${jersey-version}</version>
	</dependency>
	<dependency>
		<groupId>com.sun.jersey</groupId>
		<artifactId>jersey-servlet</artifactId>
		<version>${jersey-version}</version>
	</dependency>
	<dependency>
		<groupId>com.sun.jersey</groupId>
		<artifactId>jersey-client</artifactId>
		<version>${jersey-version}</version>
	</dependency>
	<dependency>
		<groupId>com.sun.jersey</groupId>
		<artifactId>jersey-json</artifactId>
		<version>${jersey-version}</version>
	</dependency>
	<dependency>
		<groupId>com.sun.jersey.contribs</groupId>
		<artifactId>jersey-guice</artifactId>
		<version>${jersey-version}</version>
	</dependency>
    <dependency>
        <groupId>org.apache.jclouds.driver</groupId>
        <artifactId>jclouds-enterprise</artifactId>
        <version>1.6.3</version>
    </dependency>
    <dependency>
        <groupId>org.apache.jclouds.provider</groupId>
        <artifactId>aws-s3</artifactId>
        <version>1.6.3</version>
    </dependency>
    <dependency>
        <groupId>org.apache.jclouds.api</groupId>
        <artifactId>swift</artifactId>
        <version>1.6.3</version>
    </dependency>
    <dependency>
        <groupId>org.apache.jclouds.api</groupId>
        <artifactId>s3</artifactId>
        <version>1.6.3</version>
        </dependency>
    <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.3</version>
    </dependency>
    <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.4</version>
    </dependency>
    <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math</artifactId>
        <version>2.2</version>
    </dependency>
	<dependency>
		<groupId>commons-codec</groupId>
		<artifactId>commons-codec</artifactId>
		<version>1.6</version>
	</dependency>
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>2.1</version>
	</dependency>
	<dependency>
		<groupId>javax.mail</groupId>
		<artifactId>mail</artifactId>
		<version>1.4.4</version>
	</dependency>
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>1.2.16</version>
	</dependency>
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.10</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.mockito</groupId>
		<artifactId>mockito-all</artifactId>
		<version>1.9.5</version>
		<scope>test</scope>
	</dependency>
    <dependency>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.1</version>
        <type>maven-plugin</type>
        <scope>provided</scope>
    </dependency>
</dependencies>

<build>
	<finalName>driservice</finalName>
	<pluginManagement>
		<plugins>
			<!--  For including tests -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>test-jar</id>
						<phase>package</phase>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- For exporting in jar outside mvn -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>vphshare.driservice.testing.PerformanceTest</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<wtpmanifest>true</wtpmanifest>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<compilerVersion>1.6</compilerVersion>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0</version>
			</plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.1</version>
            </plugin>
		</plugins>
	</pluginManagement>
	<plugins>
		<!-- cargo configuration for war deploy to remote tomcat instance, requires credentials for dri.tomcat in settings.xml-->
		<plugin>
			<groupId>org.codehaus.cargo</groupId>
			<artifactId>cargo-maven2-plugin</artifactId>
			<version>1.1.4</version>
			<configuration>
				<wait>true</wait>
				<container>
					<containerId>tomcat7x</containerId>
					<type>remote</type>
				</container>
				<configuration>
					<type>runtime</type>
					<properties>
						<cargo.hostname>vph.cyfronet.pl</cargo.hostname>
						<cargo.servlet.port>18080</cargo.servlet.port>
						<cargo.tomcat.manager.uri>http://vph.cyfronet.pl:18080/manager/text</cargo.tomcat.manager.uri>
						<cargo.server.settings>dri.tomcat</cargo.server.settings>
					</properties>
				</configuration>
				<deployer>
					<type>remote</type>
					<deployables>
						<deployable>
							<properties>
								<context>driservice</context>
							</properties>
							<groupId>vphshare</groupId>
							<artifactId>driservice</artifactId>
							<type>war</type>
						</deployable>
					</deployables>
				</deployer>
			</configuration>
			<executions>
				<!-- uncomment to attach remote tomcat war deploy to certain maven phases
				<execution>
					<id>verify-deploy</id>
					<phase>install</phase>
					<goals>
						<goal>deployer-deploy</goal>
					</goals>
				</execution>
				<execution>
					<id>clean-undeploy</id>
					<phase>pre-clean</phase>
					<goals>
						<goal>deployer-undeploy</goal>
					</goals>
				</execution>
				-->
			</executions>
		</plugin>
		<!-- wagon configuration for war upload via ssh, requires credentials for dri.server in settings.xml -->
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>wagon-maven-plugin</artifactId>
			<version>1.0-beta-3</version>
			<configuration>
				<serverId>dri.server</serverId>
				<fromFile>${project.build.directory}/${project.build.finalName}.war</fromFile>
				<url>${tomcat.remote.dir}</url>
			</configuration>
			<executions>
				<!-- uncomment to attach war upload via ssh to the deploy phase
				<execution>
					<id>upload-war-to-server</id>
					<phase>deploy</phase>
					<goals>
						<goal>upload-single</goal>
					</goals>
				</execution>
				-->
			</executions>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-enforcer-plugin</artifactId>
			<executions>
				<execution>
					<id>enforce-versions</id>
					<goals>
						<goal>enforce</goal>
					</goals>
					<configuration>
						<rules>
							<requireMavenVersion>
								<version>[2.2.1,)</version>
							</requireMavenVersion>
							<requireJavaVersion>
								<version>[1.6,)</version>
							</requireJavaVersion>
						</rules>
					</configuration>
				</execution>
			</executions>
		</plugin>
	</plugins>
	<!-- wagon-ssh for war upload via ssh -->
	<extensions>
		<extension>
			<groupId>org.apache.maven.wagon</groupId>
			<artifactId>wagon-ssh</artifactId>
			<version>2.1</version>
		</extension>
	</extensions>
</build>

</project>
